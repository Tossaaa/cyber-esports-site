.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(15, 25, 35, 0.9);
  backdrop-filter: blur(10px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.modal {
  background: var(--cs-dark);
  border-radius: 12px;
  padding: 2.5rem;
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  animation: slideUp 0.4s ease;
  border: 1px solid var(--cs-border);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
  color: var(--cs-accent);
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1.5rem;
  padding-bottom: 0;
  border-bottom: none;
}

.modalHeader h2 {
  margin: 0;
  color: var(--cs-light);
  font-size: 1.8rem;
  font-weight: 700;
  text-align: center;
  flex-grow: 1;
  margin-right: 1rem;
  position: relative;
  padding-bottom: 0.75rem;
}

.modalHeader h2::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 3px;
  background: var(--cs-primary);
  border-radius: 3px;
}

.closeButton {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: var(--cs-gray);
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.75rem;
  border-radius: 50%;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  z-index: 10;
}

.closeButton:hover {
  background: rgba(255, 70, 85, 0.2);
  color: var(--cs-primary);
  transform: rotate(90deg);
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  color: var(--cs-accent);
  font-size: 0.9rem;
  font-weight: 500;
}

.formGroup input,
.formGroup select,
.formGroup textarea {
  padding: 0.75rem 1rem;
  border: 1px solid var(--cs-border);
  border-radius: 8px;
  background: var(--cs-secondary);
  color: var(--cs-accent);
  font-size: 1rem;
  transition: all 0.3s ease;
}

.formGroup input:hover,
.formGroup select:hover,
.formGroup textarea:hover {
  border-color: var(--cs-primary);
  background: rgba(255, 255, 255, 0.05);
}

.formGroup input:focus,
.formGroup select:focus,
.formGroup textarea:focus {
  outline: none;
  border-color: var(--cs-primary);
  box-shadow: 0 0 0 2px rgba(255, 70, 85, 0.1);
  background: rgba(255, 255, 255, 0.07);
}

.formGroup textarea {
  resize: vertical;
  min-height: 150px;
}

.formGroup input::placeholder,
.formGroup textarea::placeholder {
  color: var(--cs-gray);
  opacity: 0.7;
}

.imageUploadGroup {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  align-items: center;
  margin-top: 1rem;
  padding: 2rem;
  background: var(--cs-secondary);
  border-radius: 16px;
  border: 1px solid var(--cs-border);
}

.imageUploadLabel {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 1rem 2rem;
  background: var(--cs-primary);
  color: var(--cs-accent);
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  width: auto;
  min-width: 200px;
  box-shadow: 0 4px 12px rgba(255, 70, 85, 0.2);
}

.imageUploadLabel:hover {
  background: var(--cs-primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(255, 70, 85, 0.3);
}

.imageUploadLabel:active {
  transform: translateY(0);
  box-shadow: 0 2px 8px rgba(255, 70, 85, 0.2);
}

.imageUploadLabel svg {
  font-size: 1.25rem;
  color: var(--cs-accent);
  transition: transform 0.3s ease;
}

.imageUploadLabel:hover svg {
  transform: translateY(-1px);
}

.imageUploadInput {
  display: none;
}

.imagePreviewContainer {
  position: relative;
  width: 200px; /* Adjusted for rectangular preview based on image */
  height: 120px; /* Adjusted for rectangular preview based on image */
  border-radius: 8px; /* Adjusted border-radius */
  overflow: hidden;
  background: var(--cs-dark);
  border: 2px dashed var(--cs-border);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.imagePreviewContainer:hover {
  border-color: var(--cs-primary);
  background: rgba(255, 70, 85, 0.05);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(255, 70, 85, 0.1);
}

.imagePreview {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.imagePreview .placeholder {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  color: var(--cs-gray);
  text-align: center;
  padding: 2rem;
}

.imagePreview .placeholder svg {
  font-size: 2rem; /* Adjusted size */
  color: var(--cs-primary);
  opacity: 0.5;
  transition: all 0.3s ease;
}

.imagePreviewContainer:hover .placeholder svg {
  opacity: 0.8;
  transform: scale(1.1);
}

.removeImageButton {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: rgba(15, 25, 35, 0.8);
  border: none;
  color: var(--cs-accent);
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  opacity: 0;
  transform: scale(0.8);
  backdrop-filter: blur(4px);
}

.imagePreviewContainer:hover .removeImageButton {
  opacity: 1;
  transform: scale(1);
}

.removeImageButton:hover {
  background: var(--cs-primary);
  transform: scale(1.1);
}

.formActions {
  display: flex;
  gap: 1.5rem;
  margin-top: 2rem;
}

.cancelButton,
.submitButton {
  padding: 1rem 2rem;
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  transition: all 0.3s ease;
  flex: 1;
}

.submitButton {
  background: var(--cs-primary);
  color: var(--cs-accent);
}

.submitButton:hover:not(:disabled) {
  background: var(--cs-primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(255, 70, 85, 0.2);
}

.cancelButton {
  background: var(--cs-secondary);
  color: var(--cs-accent);
  border: 1px solid var(--cs-border);
}

.cancelButton:hover:not(:disabled) {
  background: rgba(255, 70, 85, 0.1);
  transform: translateY(-2px);
}

.submitButton:disabled,
.cancelButton:disabled {
  opacity: 0.65;
  cursor: not-allowed;
}

.errorMessage {
  background-color: rgba(255, 70, 85, 0.1);
  color: var(--cs-primary);
  border: 1px solid rgba(255, 70, 85, 0.3);
  border-radius: 4px;
  padding: 1rem;
  margin-bottom: 1.5rem;
  font-size: 0.9rem;
  text-align: center;
}

/* Scrollbar styles */
.modal::-webkit-scrollbar {
  width: 10px;
}

.modal::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  margin: 4px;
}

.modal::-webkit-scrollbar-thumb {
  background: var(--cs-primary);
  border-radius: 8px;
  border: 2px solid var(--cs-dark);
  transition: all 0.3s ease;
}

.modal::-webkit-scrollbar-thumb:hover {
  background: var(--cs-primary-dark);
}

/* Firefox scrollbar */
.modal {
  scrollbar-width: thin;
  scrollbar-color: var(--cs-primary) rgba(255, 255, 255, 0.05);
}

@media (max-width: 768px) {
  .modal {
    padding: 1.5rem;
  }

  .form {
    gap: 1rem;
  }

  .formActions {
    flex-direction: column-reverse;
    gap: 1rem;
  }

  .cancelButton,
  .submitButton {
    width: 100%;
    font-size: 1rem;
  }

  .modalHeader h2 {
    font-size: 1.5rem;
  }

  .formGroup label,
  .formGroup input,
  .formGroup select,
  .formGroup textarea,
  .errorMessage {
    font-size: 0.9rem;
  }

  .imageUploadGroup {
    padding: 1.5rem;
  }

  .imagePreviewContainer {
    width: 150px; /* Adjusted for mobile */
    height: 90px; /* Adjusted for mobile */
  }

  .imageUploadLabel {
    padding: 0.8rem 1.5rem;
    font-size: 0.9rem;
  }
}

@media (max-width: 480px) {
  .modal {
    padding: 1rem;
  }

  .modalHeader h2 {
    font-size: 1.3rem;
  }

  .form {
    gap: 0.8rem;
  }

  .formGroup label,
  .formGroup input,
  .formGroup select,
  .formGroup textarea,
  .errorMessage {
    font-size: 0.85rem;
  }

  .imageUploadGroup {
    padding: 1rem;
  }

  .imagePreviewContainer {
    width: 120px; /* Adjusted for smaller mobile */
    height: 72px; /* Adjusted for smaller mobile */
  }

  .imageUploadLabel {
    padding: 0.7rem 1.2rem;
    font-size: 0.85rem;
  }
}

.formGroup select {
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23ff4655' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 1rem;
  padding-right: 2.5rem;
  cursor: pointer;
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--cs-border);
  border-radius: 8px;
  background-color: var(--cs-secondary);
  color: var(--cs-accent);
  font-size: 1rem;
  transition: all 0.3s ease;
}

.formGroup select:hover {
  border-color: var(--cs-primary);
  background-color: rgba(255, 255, 255, 0.05);
}

.formGroup select:focus {
  outline: none;
  border-color: var(--cs-primary);
  box-shadow: 0 0 0 2px rgba(255, 70, 85, 0.1);
}

.formGroup select option {
  padding: 0.75rem;
  background: var(--cs-secondary);
  color: var(--cs-accent);
  cursor: pointer;
}

.formGroup select option:checked {
  background: rgba(255, 70, 85, 0.1);
  color: var(--cs-primary);
}

.formGroup select option:hover {
  background: rgba(255, 255, 255, 0.05);
}

/* Стилизация скроллбара для select */
.formGroup select::-webkit-scrollbar {
  width: 6px;
}

.formGroup select::-webkit-scrollbar-track {
  background: var(--cs-secondary);
}

.formGroup select::-webkit-scrollbar-thumb {
  background: var(--cs-border);
  border-radius: 3px;
}

.formGroup select::-webkit-scrollbar-thumb:hover {
  background: var(--cs-primary);
}

/* Стили для множественного выбора */
.formGroup select[multiple] {
  padding: 0;
}

.formGroup select[multiple] option {
  padding: 0.75rem 1rem;
  border-bottom: 1px solid var(--cs-border);
}

.formGroup select[multiple] option:last-child {
  border-bottom: none;
}

.formGroup select[multiple] option:checked {
  background: rgba(255, 70, 85, 0.1);
  color: var(--cs-primary);
}

.formGroup select[multiple] option:hover:not(:checked) {
  background: rgba(255, 255, 255, 0.05);
}